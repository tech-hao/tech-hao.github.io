<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计算机网络笔记(2)——应用层</title>
    <link href="/2023/10/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0-2-%E2%80%94%E2%80%94%E5%BA%94%E7%94%A8%E5%B1%82/"/>
    <url>/2023/10/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0-2-%E2%80%94%E2%80%94%E5%BA%94%E7%94%A8%E5%B1%82/</url>
    
    <content type="html"><![CDATA[<h1 id="网络应用的基本原理">1.网络应用的基本原理</h1><h2 id="网络应用的体系结构">1.1 网络应用的体系结构</h2><ul><li>客户机/服务器结构（Client-Server,C/S）<ul><li>服务器<ul><li>永远在线，提供服务</li><li>永久性访问地址</li><li>利用大量服务器实现可扩展性</li></ul></li><li>客户机<ul><li>与服务器通信，使用服务器提供的服务</li><li>间歇性接入网络</li><li>可能使用动态IP地址</li><li>不会和其他客户机直接通信</li></ul></li></ul></li><li>P2P结构<ul><li>没有永远在线的服务器</li><li>任意端系统之间可以直接通讯</li><li>节点间歇性接入网络</li><li>节点可能改变IP地址</li></ul></li><li>混合结构<ul><li>例如：Napster<ul><li>文件传输使用P2P结构</li><li>文件搜索使用C/S结构</li></ul></li></ul></li></ul><h2 id="网络应用进程通信">1.2 网络应用进程通信</h2><ul><li>在两个不同端系统的进程，通过跨越计算机网络交换报文而相互通信<ul><li>客户机进程：发起通信的进程</li><li>服务器进程：等待通信请求的进程</li></ul></li><li>进程通过一个称为socket的软件接口向网络发送报文和从网络接受报文 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910152149_network10.png"alt="img" /></li><li>进程寻址<ul><li>IP地址：32位比特的量且能唯一标识主机</li><li>端口号：标识主机上每个需要通信的进程<ul><li>HTTP Server：80</li><li>Mail Server：25</li></ul></li><li>进程的标识符：IP地址+端口号</li></ul></li></ul><h2 id="可供网络应用使用的传输服务">1.3 可供网络应用使用的传输服务</h2><ul><li>可靠数据传输<ul><li>要求100%可靠的数据传输的应用：文件传输</li><li>能够容忍一定的数据丢失的应用：网络电话</li></ul></li><li>吞吐量<ul><li>带宽敏感的应用：多媒体应用</li><li>弹性应用：根据当时可用的带宽或多或少第利用可供使用的吞吐量。<ul><li>电子邮件、文件传输、Web传送等</li></ul></li></ul></li><li>定时<ul><li>网络电话、网络游戏等实时的应用需要足够低的时延</li></ul></li><li>安全性<ul><li>运输协议能够加密有发送进程传输的所有数据，在接收主机中，运输协议能够再将数据交付给接收进程之前解密这些数据</li></ul></li></ul><h2 id="internet-提供的传输服务">1.4 Internet 提供的传输服务</h2><ul><li>TCP服务<ul><li>面向连接：客户机/服务器进程间需要建立TCP连接</li><li>可靠的数据传输服务</li><li>流量控制：发送方不会发送速度过快、超过接收方的处理能力</li><li>拥塞控制：当网络负载过重时，能够限制发送方的发送速度</li></ul></li><li>UDP服务<ul><li>无连接：两个进程通信前没有握手过程。</li><li>不可靠的数据传输</li><li>不提供拥塞控制、流量控制</li></ul></li></ul><h1 id="web应用">2.Web应用</h1><h2 id="http概述">2.1 HTTP概述</h2><ul><li>Web应用遵循HTTP协议，采用客户机/服务器结构<ul><li>客户———Browser：请求、接收、展示Web对象</li><li>服务器————Web Server：相应客户的请求，发送对象</li></ul></li><li>HTTP使用TCP作为它的支撑运输协议<ul><li>服务器在80端口等待客户的请求</li><li>浏览器发起到服务器的TCP连接（创建套接字Socket）</li><li>服务器接受来自浏览器的TCP连接</li><li>浏览器(HTTP客户端)与Web服务器（HTTP服务器）交换HTTP信息</li><li>关闭TCP连接</li></ul></li><li>HTTP是无状态协议，并不保存关于客户的任何信息</li></ul><h2 id="http连接类型">2.2 HTTP连接类型</h2><ul><li>非持久性连接<ul><li>每个TCP连接最多允许传输一个对象</li><li>HTTP1.0版本使用非持久性连接</li></ul></li><li>非持久性连接情况下传送Web页面的步骤（假定URL为www.someSchool.edu/someDepartment/home.index）<ul><li>HTTP客户进程在端口号80发起一个到服务器www.someSchool.edu的TCP连接请求，HTTP服务器在端口80等待TCP连接请求，接受连接并通知客户端</li><li>HTTP客户端将HTTP请求消息（包含URL）通过TCP连接的套接字发出</li><li>HTTP服务器收到请求消息，解析，产生包含所需要对象的相应消息，并通过套接字发给客户端</li><li>HTTP服务器关闭TCP连接</li><li>HTTP客户端收到相应消息，解析并显示html文件，发现有10个执行jpeg对象的超链接</li><li>为每个jpeg对象重复以上步骤</li></ul></li><li>往返时间（RTT）：一个短分组从客户到服务器然后再返回客户所花费的时间</li><li>非持久性连接的响应时间<ul><li>发起、建立TCP连接：1个RTT</li><li>发送HTTP请求消息到HTTP相应消息的前几个字节到达：1个RTT</li><li>总时间=2*RTT + 文件发送时间 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910164005_network11.png%20=500x"alt="img" /></li></ul></li><li>持久性连接<ul><li>每个TCP连接允许传输多个对象</li><li>发送响应后，服务器保持TCP连接打开，后续的HTTP消息可以通过这个连接发送</li><li>HTTP1.1版本默认使用持久性连接</li></ul></li><li>无流水的持久性连接<ul><li>客户端只有收到前一个相应后才发送新的请求</li><li>每个被引用的对象耗时1个RTT</li></ul></li><li>带有流水机制的持久性连接<ul><li>客户端只要遇到一个引用对象就尽快地发出请求</li><li>理想情况下，收到所有的引用对象只需耗时约1个RTT</li><li>HTTP 1.1的默认选项</li></ul></li></ul><h2 id="http消息格式">2.3 HTTP消息格式</h2><ul><li>HTTP请求消息<ul><li>由普通ASCII书写，人直接可读</li><li>请求消息的第一行叫做请求行(request line)<ul><li>方法字段————GET,POST,HEAD,PUT,DELETE</li><li>URL字段</li><li>HTTP字段</li></ul></li><li>请求行后继的行叫做首部行（header line）<ul><li>Host:对象所在的主机</li><li>Connection：是否使用持续连接</li><li>User-agent：指明用户代理</li></ul></li><li>实体体（entity body）————使用POST方法时才使用 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230911090917_network12.png%20=450x"alt="img" /></li></ul></li><li>HTTP响应消息<ul><li>响应消息第一行为初始状态行（status line）<ul><li>协议版本字段</li><li>状态码和状态信息<ul><li>200 OK：请求成功，信息在返回的响应报文中</li><li>301 Moved Permanently：请求的对象被永久转移</li><li>400 Bad Request：该请求不能被服务器理解</li><li>404 Not Found：被请求的文档不在服务器上</li><li>505 HTTP Version NotSupported：服务器不支持请求报文使用的HTTP版本</li></ul></li></ul></li><li>初始状态行后继的行叫做首部行（header line）</li><li>实体体是响应消息的主要部分，包含了所请求的对象本身 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230911110610_network13.png%20=450x"alt="img" /></li></ul></li></ul><h2 id="cookie技术">2.4 Cookie技术</h2><ul><li>某些网站为了辨别用户身份、进行session跟踪而存储在用户本地终端上的数据</li><li>Cookie的组件<ul><li>HTTP相应消息的cookie头部行</li><li>HTTP请求消息的cookie头部行</li><li>保存在客户端主机上的cookie文件，由浏览器管理</li><li>Web服务器端的后端数据库</li></ul></li><li>Cookie技术支持<ul><li>身份认证</li><li>构建购物车</li><li>个性化推荐</li><li>用户会话状态信息维护</li></ul></li></ul><h2 id="web缓存技术">2.5 Web缓存技术</h2><ul><li>功能：在不访问服务器的前提下满足客户端的HTTP请求</li><li>Web缓存技术的优势：<ul><li>缩短客户请求的相应时间</li><li>减少机构的流量</li><li>在大范围内实现有效的内容分发</li></ul></li><li>Web缓存服务器（代理服务器）<ul><li>用户通过配置使得所有的HTTP请求首先指向Web缓存服务器<ul><li>如果请求对象在缓存中，缓存返回对象</li><li>否则，缓存服务器向原始服务器发送HTTP请求来获取对象，然后返回客户端并保存该对象</li></ul></li><li>Web缓存器既是服务器又是客户，一般由ISP假设</li></ul></li><li>条件GET方法<ul><li>一种允许缓存器证实它的对象是最新的机制</li><li>缓存器向Web服务器发送的请求消息中声明所持有版本的日期</li><li>如果缓存的版本是最新的，则响应消息不包含对象</li></ul></li></ul><h1 id="email应用">3.Email应用</h1><ul><li>Email应用的组成部分<ul><li>用户代理（user agent）<ul><li>允许用户阅读、回复、转发、保存和撰写报文</li><li>例如：Outlook、Apple Mail、Gmail等</li></ul></li><li>邮件服务器<ul><li>有一个邮箱，管理和维护该用户的Email</li><li>消息队列：存储等待发送的Email，如果邮件不能够交付给接收方的服务器上，就会在消息队列中保持该消息并在以后的尝试中发送</li></ul></li><li>简单邮件传输协议（Simple Mail Transfer Protocol,SMTP）</li></ul></li><li>SMTP协议<ul><li>使用TCP协议进行Email消息的可靠传输</li><li>端口号：25</li><li>Email消息只能抱哈7位ASCII码</li><li>命令/响应交互模式<ul><li>命令：ASCII文本</li><li>响应：状态代码和语句</li></ul></li><li>使用持久性连接</li></ul></li><li>Email消息格式<ul><li>头部行（header）<ul><li>必须包括From和To首部行</li><li>也许包含一个Subject首部行</li></ul></li><li>消息体（body）<ul><li>只能是ASCII字符</li></ul></li></ul></li></ul><figure><img src="https://s2.loli.net/2023/10/03/dGScBOveY7s6HkL.png"alt="image.png" /><figcaption aria-hidden="true">image.png</figcaption></figure><ul><li>邮件访问协议</li></ul><figure><img src="https://s2.loli.net/2023/10/03/69B1nW4epaRMrmH.png"alt="image.png" /><figcaption aria-hidden="true">image.png</figcaption></figure><ul><li>POP协议<ul><li>采用“下载并删除”模式。用户如果更换客户端软件，则无法重读该邮件</li><li>采用“下载并保持”模式。不同客户端都可以保留消息的拷贝</li><li>无状态</li></ul></li><li>IMAP协议<ul><li>所有消息统一保存在服务器</li><li>允许用户利用文件夹组织信息</li></ul></li><li>HTTP协议也可以作为邮件访问协议</li></ul><h1 id="dns应用">4.DNS应用</h1><h2 id="dns概述">4.1 DNS概述</h2><ul><li>DNS(Domain NameSystem):域名解析系统，提供主机名到IP地址转换的目录服务。<ul><li>组成<ul><li>一个分层的DNS服务器实现的分布式数据库</li><li>一个应用层协议：使得主机能够查询分布式数据库</li></ul></li><li>若采用集中式的DNS，会产生问题如下：<ul><li>单点故障：如果该DNS服务器崩溃，整个因特网随之瘫痪</li><li>通信容量：单个服务器不得不处理所有的DNS查询</li><li>远距离的集中式数据库：若DNS服务器放在亚洲，那么对于其他国家的DNS查询需要传播到地球另一端，也许需要经过低速和拥挤的链路，时延会很长</li><li>维护问题：单个DNS服务器必须为所有的因特网主机保留记录，会产生很大的维护开销。</li></ul></li></ul></li><li>DNS服务<ul><li>域名到IP地址的转换</li><li>主机别名：具有复杂主机名的主机可能有多个别名。应用程序可以调用DNS获取主机别名对应的规范主机名以及主机的IP地址</li><li>邮件服务器别名：邮件应用程序调用DNS获取主机别名对应的规范主机名及其IP地址</li><li>负载分配：DNS用于在冗余的服务器进行负载分配</li></ul></li></ul><h2 id="dns工作机理">4.2 DNS工作机理</h2><ul><li>根DNS服务器、顶级域（TLD）DNS服务器、权威DNS服务器按照下图的层次结构组织。<ul><li>客户端想要查询www.amazon.com的IP，需要进行下列步骤（1）客户端与根服务器联系，返回顶级域名com的TLD服务器的IP地址（2）客户端与com域名解析服务器联系，返回权威服务器的IP地址（3）客户端与amazon.com的权威服务器之一联系，获得www.amazon.com的IP地址<img src="https://s2.loli.net/2023/10/03/cMzo8nNFxZW4GPQ.png"alt="image.png" /></li></ul></li><li>本地DNS服务器<ul><li>不严格属于该服务器的层次结构</li><li>每一个ISP都有一台本地DNS服务器</li><li>主机发出DNS请求时，查询被发送到本地DNS服务器，起着代理的作用，并将该请求转发到DNS服务器的层次结构中。</li></ul></li><li>迭代查询 <imgsrc="https://s2.loli.net/2023/10/03/rC2LR54JZAlXhS7.png"alt="image.png" /></li><li>递归查询 <imgsrc="https://s2.loli.net/2023/10/03/sLqWfbCUdN92tGJ.png"alt="image.png" /></li><li>DNS缓存<ul><li>在一个请求链中，当某DNS服务器接收一个DNS回答时，它就能将映射缓存在本地存储器中。</li></ul></li></ul><h2 id="dns记录和消息">4.3 DNS记录和消息</h2><ul><li><p>资源记录（ResourceRecord,RR）：存储于共同实现DNS分布式数据库的所有DNS服务器中，是一个包含下列字段的4元组<span class="math display">\[(Name,Value,Type,TTL)\]</span></p><ul><li>如果Type=A<ul><li>Name：主机域名</li><li>Value：主机名对应的IP地址</li></ul></li><li>如果Type=NS<ul><li>Name：域（foo.com）</li><li>Value：该域权威域名解析服务器的主机域名</li></ul></li><li>如果Type=CNAME<ul><li>Name：某一真实域名的别名</li><li>Value：主机别名为Name的规范主机名</li></ul></li><li>如果Type=MX<ul><li>Name：邮件服务器主机名的别名</li><li>Value：别名为Name的邮件服务器的规范主机名</li></ul></li></ul></li><li><p>DNS消息格式</p></li></ul><figure><img src="https://s2.loli.net/2023/10/03/iHV2naJwmLQk9Is.png"alt="image.png" /><figcaption aria-hidden="true">image.png</figcaption></figure><h1 id="p2p应用">5.P2P应用</h1><h2 id="p2p文件分发">5.1 P2P文件分发</h2><ul><li><p>客户机-服务器体系结构的文件分发时间</p><ul><li><p>服务器必须向N个对等方的每一个传输该文件的一个副本，一共需要传输<spanclass="math inline">\(NF\)</span> bit，由于上载速率是<spanclass="math inline">\(u_s\)</span>，分发该文件的时间至少是 <spanclass="math inline">\({NF}/{u_s}\)</span></p></li><li><p>令 <spanclass="math inline">\(d_{min}\)</span>为具有最小下载速率的对等方的下载速率。易知最小分发时间至少为<spanclass="math inline">\({F}/{d_{min}}\)</span></p></li><li><p>把文件分发给对等方的时间为： <span class="math display">\[D_{cs}=\max \{ \frac {NF}{u_s},\frac{F}{d_{min}} \}\]</span></p><ul><li>对于足够大的N，客户机服务器分发时间随着对等方数量增加而线性地增大</li><li>注：其中<spanclass="math inline">\(u_s\)</span>表示服务器接入链路的上载速率，<spanclass="math inline">\(F\)</span>表示分发的文件长度（bit），<spanclass="math inline">\(u_i\)</span>表示第i个对等方接入链路的上载速率，<spanclass="math inline">\(d_i\)</span>表示第i个对等方接入链路的下载速率，<spanclass="math inline">\(N\)</span>表示数量，下同。</li></ul></li></ul></li><li><p>P2P文件分发时间</p><ul><li>服务器必须至少发送文件一次，所需时间为 <spanclass="math inline">\({F}/{u_s}\)</span></li><li>对等方下载所需时间至少为拥有最小下载速度的对等方的下载时间 <spanclass="math inline">\({F}/{u_{min}}\)</span></li><li>系统整体总上载能力为 <spanclass="math inline">\(u_{total}=u_s+u_1+u_2+...+u_N\)</span>。系统必须向每一个对等方上载<spanclass="math inline">\(F\)</span>bit，时间至少为 $ {NF}/{u_{total}}$</li><li>综上所述，P2P最小分发时间为 <span class="math display">\[D_{P2P} = \max {\{} {\frac{F}{u_s} {,} \frac {F}{u_{min}},\frac{NF}{\sum_{i=1}^N u_i} {\}}}\]</span></li></ul></li><li><p>BitTorrent</p><ul><li>一种用于文件分发的流行P2P协议</li><li>洪流（torrent）：参与一个特定文件分发的所有对等方的集合</li><li>一个洪流中的对等方彼此下载等长度的文件块（chunk），典型的块长度为256KB</li><li>对等方加入某洪流<ul><li>没有块，但会逐渐积累</li><li>向追踪器（tracker）注册获得节点清单，与对等方建立连接</li></ul></li><li>下载的同时，结点需要向其他对等方上传块</li><li>获取块——最稀缺优先<ul><li>针对自己没有的块在邻居中找最稀缺的块（邻居中副本最少的块），首先进行请求</li><li>大致均衡洪流中的副本数量</li></ul></li><li>发送块——一报还一报（tit-for-tat）<ul><li>根据当前能够以最高速率向她提供数据的邻居，给予其优先权<ul><li>确定以最高数据流入的4个邻居，即确定疏通（unchoked）</li><li>每10s重新计算速率以重新确定疏通</li></ul></li><li>每30s随机选择一个其他邻居并向其发送块</li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络笔记(1)——计算机系统概述</title>
    <link href="/2023/10/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0-1-%E2%80%94%E2%80%94%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
    <url>/2023/10/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0-1-%E2%80%94%E2%80%94%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="计算机网络">1.计算机网络</h2><ul><li>计算机网络是<strong>互联</strong>的、<strong>自治</strong>的计算机集合。<ul><li>自治——无主从关系</li><li>互联——互联互通</li></ul></li><li>端系统（主机）通过通信链路和分组交换机的网络连接到一起。常见的分组交换机的类型是路由器和链路层交换机。</li><li>端系统通过因特网服务提供商（Internet ServiceProvider,ISP）接入因特网</li></ul><h2 id="网络协议">2.网络协议</h2><ul><li>网络协议(networkprotocol),简称为协议，是为进行网络中的数据交换而建立的规则、标准或约定。</li><li>协议定义了在两个或多个通信实体之间交换的报文的格式和顺序，以及报文的发送/接收或其他事件所采取的操作。</li><li>协议的三要素<ul><li>语法（Syntax）<ul><li>数据与控制信息的结构或格式</li><li>信号电平</li></ul></li><li>语义（Semantics）<ul><li>需要发出何种控制信息</li><li>完成何种动作以及做出何种响应</li><li>差错控制</li></ul></li><li>时序（Timing）<ul><li>事件顺序</li><li>速度匹配</li></ul></li></ul></li></ul><h2 id="计算机网络结构">3.计算机网络结构</h2><h3 id="网络边缘">3.1 网络边缘</h3><ul><li>端系统（主机）位于“网络边缘”，运行应用程序，如web，Email等。</li></ul><h3 id="接入网络">3.2 接入网络</h3><ul><li>接入网：将端系统物理连接到其边缘路由器的网络。<ul><li>家庭接入网络</li><li>机构接入网络</li><li>移动接入网络</li></ul></li><li>家庭接入网络<ul><li>数字用户线路（DSL）<ul><li>每个用户的DSL调制调节器使用现有的电话线与位于电话公司的本地中心局中的DSL接入多路复用器交换数据。</li><li>频分多路复用：在不同频带上传输不同频道<ul><li>高速下行信道：50kHz~1MHz频段</li><li>中速上行信道：4kHz~50kHz频段</li><li>普通的双向电话信道：位于0~4kHz频段 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910072650_network1.png"alt="img" /></li></ul></li></ul></li><li>电缆网络<ul><li>非对称：下行高达30Mbps传输速率，上行为2Mbps传输速率。</li><li>各个家庭共享家庭至电缆头端的接入网络，而DSL独占至中心局接入 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910073919_network2.png"alt="img" /></li></ul></li></ul></li><li>机构接入网络<ul><li>典型传输速率：10Mbps,100Mbps,1Gbps,10Gbps</li><li>端系统通常直接连接以太网交换机 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910074359_network3.png"alt="img" /></li></ul></li><li>无线接入网络<ul><li>无线局域网（LANS）</li><li>广域无线接入（4G,5G）</li></ul></li></ul><h3 id="网络核心">3.3 网络核心</h3><ul><li>网络核心：由互联因特网端系统的分组交换机和链路构成的网状网络。</li><li>关键功能:<ul><li>路由：确定分组从源到目的传输路径</li><li>转发：将分组从路由器的输入端口交换至正确的输出端口</li></ul></li><li>通过数据交换的方式，实现数据通过网络核心从源主机到达目的主机的过程<imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910083124_network4.png"alt="img" /><ul><li>端系统通过接入ISP连接到Internet</li><li>一级ISP（如网通，电信）提供国家或国际范围的覆盖</li><li>多个ISP在因特网交换点（Internet ExchangePoint,IXP）对等（peer）</li><li>内容提供商网络(content providernetwork,如：Google)：私有网络，连接其数据中心与Internet，通常绕过一级ISP和区域ISPs</li></ul></li></ul><h2 id="数据交换">4.数据交换</h2><h3 id="电路交换">4.1 电路交换</h3><ul><li>电路交换的三个阶段<ul><li>建立连接（呼叫/电路建立）</li><li>通信</li><li>释放连接（拆除电路）</li></ul></li><li>电路交换网络中，端系统间通信独占一份网络资源，通过多路复用共享中继线。</li><li>多路复用（Mutiplexing）：将网络资源划分为“资源片”，分配给各路“呼叫”，每路呼叫独占分配到的资源。资源片可能“闲置”（idle）。<ul><li>频分多路复用（FDM）：各个用户占用不同的频率带宽资源。 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910090935_network5.png"alt="img" /></li><li>时分多路复用（TDM）：将时间划分为一段段等长的时分复用帧（TDM帧），每个用户在每个TDM帧中占用固定序号的时隙<imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910091246_network6.png"alt="IMG" /></li></ul></li></ul><h3 id="报文交换与分组交换">4.2 报文交换与分组交换</h3><ul><li><p>报文：应用发送的信息整体。</p><ul><li>报文交换将报文整体从源端系统发送至目的端系统</li></ul></li><li><p>分组：报文分拆出来的一系列较小的数据包</p><ul><li>分组交换将报文拆分为较小的数据块，将其传输至目的端系统。</li><li>报文的拆分与重组会产生额外开销。</li></ul></li><li><p>统计多路复用 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910092507_network7.png"alt="img" /></p><ul><li>A和B主机同时进行数据传输，传输到路由器时分组序列不确定，按需共享链路，即统计多路复用（Statisticalmultiplexing）。</li></ul></li><li><p>存储-转发交换方式：交换机开始向输出链路传输该分组的第一个比特前，必须接收到整个分组。</p><ul><li>报文交换以完整报文进行“存储-转发”</li><li>分组交换以较小的分组进行“存储-转发”</li><li>分组交换可以实现路由器转发的流水，时延更短</li></ul></li><li><p>分组交换的报文交付时间 <span class="math display">\[T = \frac{M}{R}+ \frac{nL}{R}\]</span></p><ul><li>报文：<span class="math inline">\(M\)</span> bits</li><li>链路带宽：<span class="math inline">\(R\)</span> bps</li><li>分组长度：<span class="math inline">\(L\)</span> bit</li><li>路由器数：<span class="math inline">\(n\)</span></li></ul></li><li><p>分组交换 vs 电路交换</p><ul><li>分组交换允许更多用户同时使用网络，资源充分共享</li><li>分组交换可能产生拥塞————分组延迟、丢失</li><li>分组交换使用于突发数据传输网络</li></ul></li></ul><h2 id="计算机网络性能">5. 计算机网络性能</h2><h3 id="速率带宽延迟">5.1 速率、带宽、延迟</h3><ul><li>速率即数据率，也称为数据传输速率（比特率），表示单位时间传递信息（比特）量。<ul><li>比特率是计算机网络中最重要的一个性能指标</li><li>单位b/s（bps），kb/s，Mb/s，Gb/s</li></ul></li><li>带宽：数字信道所能传送的最高数据率，单位：b/s(bps)</li><li>延迟<ul><li>节点处理延迟：<span class="math inline">\(d_{proc}\)</span>（nodalprocessing delay）<ul><li>检查分组首部并决定该分组将导向何处</li><li>检查比特级的差错</li><li>数量级在微秒甚至更低</li></ul></li><li>排队延迟：<span class="math inline">\(d_{queue}\)</span>（queueingdelay）<ul><li>等待输出链路可用，造成排队延迟</li><li>取决于路由器拥塞程度</li><li>数量级在毫秒到微秒量级</li></ul></li><li>传输延迟：<spanclass="math inline">\(d_{trans}\)</span>(transmission delay)<ul><li>路由器将一个分组的全部比特推向链路所需要的时间</li><li>$d_{trans} = $<ul><li><span class="math inline">\(L\)</span>：分组长度（bits）</li><li><span class="math inline">\(R\)</span>：链路带宽(bps)</li></ul></li></ul></li><li>传播延迟：<span class="math inline">\(d_{prop}\)</span>（propagationdelay）<ul><li>从该链路的起点到链路的终点传播所需要的时间</li><li><span class="math inline">\(d_{prop} = \frac{d}{s}\)</span><ul><li><span class="math inline">\(d\)</span>：物理链路长度</li><li><span class="math inline">\(s\)</span>：信号传播速度</li></ul></li></ul></li><li>总延迟：$d_{nodal} = d_{proc} + d_{queue} + d_{trans} + d_{prop}$</li></ul><blockquote><p>注意区分传输延迟和传播延迟的概念</p></blockquote></li><li>流量强度：<span class="math inline">\(\frac{La}{R}\)</span><ul><li><span class="math inline">\(\frac{La}{R} \approx0\)</span>：平均片段延迟很小</li><li><span class="math inline">\(\frac{La}{R} →1\)</span>：平均排队延迟很大</li><li><span class="math inline">\(\frac{La}{R} &gt;1\)</span>：超出服务能力，平均排队延迟无限大！ <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910133822_network8.png"alt="img" /></li></ul></li></ul><h3 id="时延带宽积丢包率吞吐量">5.2 时延带宽积、丢包率、吞吐量</h3><ul><li>时延带宽积：以比特为单位的链路长度 <span class="math display">\[时延带宽积 = 传播时延 \times 带宽 = d_{prop} \times R(bits)\]</span></li><li>丢包<ul><li>队列缓存容量有限</li><li>分组到达已满队列将被丢弃</li><li>丢弃分组可能有前序结点或源重发（也可能不重发）</li></ul></li></ul><p><span class="math display">\[丢包率 = \frac{丢包数}{已发分组总数}\]</span></p><ul><li>吞吐量：在发送端与接收端之间传输数据速率（b/s）</li><li>瓶颈链路：端到端路径上，限制端到端吞吐量的链路</li></ul><h2 id="五层参考模型">6.五层参考模型</h2><ul><li>应用层：各种网络应用程序及它们的应用层协议存留的地方<ul><li>FTP,SMTP,HTTP</li></ul></li><li>传输层：在应用程序端点之间传送应用层报文，即进程-进程的数据传输<ul><li>TCP,UDP</li></ul></li><li>网络层：将数据报的网络层分组从一台主机移动到另一台主机。<ul><li>IP协议、路由协议</li></ul></li><li>链路层：相邻网络元素（主机、路由器等）的数据传输<ul><li>以太网、WiFi</li></ul></li><li>物理层：比特传输</li><li>数据封装 <imgsrc="https://images.cnblogs.com/cnblogs_com/blogs/797656/galleries/2343007/o_230910144008_network9.png"alt="img" /></li></ul>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
